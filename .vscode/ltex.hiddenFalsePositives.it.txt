{"rule":"GR_04_002","sentence":"^\\QUna prima osservazione é che spesso, per mantenere l'informazione di quali URL sono stati giá visitati (V F) é preferibile sostituire gli URL con delle firme, cioé con il risultato del calcolo di \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, dove h é una funzione di hash definita sulle stringhe e restituisce un hash di dimensione arbitraria, per esempio 64 bit.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qvalore d'esempio arbitrario\\E$"}
{"rule":"ST_04_001","sentence":"^\\QPer aggiungere un elemento al filtro è necessario calcolare i valori per tutte le \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q funzioni di hash e mettere a 1 il bit \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q con \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"ST_04_001","sentence":"^\\QIntuitivamente, ogni volta che un elemento viene aggiunto al filtro la conoscenza della presenza dell'elemento viene sparsa in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q bit a caso, che vengono interrogati quando è necessario sapere se quell'elemento è stato memorizzato: è però possibile che i \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q bit siano stati messi a 1 a seguito di una serie di inserimenti precedenti, quindi la risposta a un'interrogazione per un elemento che non è presente nell'insieme risulta essere ugualmente positiva.\\E$"}
{"rule":"ER_01_001","sentence":"^\\QIntuitivamente, ogni volta che un elemento viene aggiunto al filtro la conoscenza della presenza dell'elemento viene sparsa in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q bit a caso, che vengono interrogati quando è necessario sapere se quell'elemento è stato memorizzato: è però possibile che i \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q bit siano stati messi a 1 a seguito di una serie di inserimenti precedenti, quindi la risposta a un'interrogazione per un elemento che non è presente nell'insieme risulta essere ugualmente positiva.\\E$"}
{"rule":"ST_04_001","sentence":"^\\QIntuitivamente, ogni volta che un elemento viene aggiunto al filtro la conoscenza della presenza dell'elemento viene sparsa in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q bit a caso, che vengono interrogati quando è necessario sapere se quell'elemento è stato memorizzato: è però possibile che i \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q bit siano stati messi a 1 a seguito di una serie d'inserimenti precedenti, quindi la risposta a un'interrogazione per un elemento che non è presente nell'insieme risulta essere ugualmente positiva.\\E$"}
{"rule":"ER_01_001","sentence":"^\\QIntuitivamente, ogni volta che un elemento viene aggiunto al filtro la conoscenza della presenza dell'elemento viene sparsa in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q bit a caso, che vengono interrogati quando è necessario sapere se quell'elemento è stato memorizzato: è però possibile che i \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q bit siano stati messi a 1 a seguito di una serie d'inserimenti precedenti, quindi la risposta a un'interrogazione per un elemento che non è presente nell'insieme risulta essere ugualmente positiva.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QIn realtà Kirsch e Mitzenmacher hanno dimostrato che estraendo due numeri interi a 64 bit \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q e \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q tramite una funzione di hash, i numeri \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q sono \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q hash sufficienti a replicare l'analisi condotta utilizzando funzioni indipendenti e pienamente casuali.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QUno degli esempi classici di database NoSQL è il BerkeleyDB, che permette di memorizzare coppie/chiave valore in maniera non ordinata od ordinata tramite una hash table e un B-tree parzialmente su disco.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QBigTable è stato successivamente reimplementato come progetto open-source, LevelDB, che è poi stato utilizzato come base per altri database NoSQL come RocksDB, l'implementazione di Facebook, che è utilizzata da commoncrawler, un crawler open-source.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QUn LSM-tree è diviso in vari livelli, ognuno dei quali contiene un sottoinsieme delle coppie chiave/valore che si intende rappresentare.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QIl primo livello è sempre in memoria centrale e ha dimensione limitata a priori, solitamente è implementato tramite un normale dizionario ordinato (RB-tree o B-tree).\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QI livelli successivi sono memorizzati sotto forma di log e sono una successione immutabile di coppie chiave/valore ordinate.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QIl primo aspetto importante di un LSM-tree è che una chiave può comparire in più livelli, il valore associato è quello che compare nel livello più alto in cui è possibile trovare la chiave.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QAnche in assenza di fusioni di livelli, in generale in un LSM-tree vengono lasciati in esecuzione dei thread che si occupano di fare il compattamento della struttura: Controllano che il numero di copie per chiave non sia eccessivo Rimuovono eventuali lapidi in eccesso Infine, tutte le operazioni di fusione non vengono effettuate veramente durante gli inserimenti, ma piuttosto vengono svolte con continuità da processi concorrenti.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QSi noti che al crescere della frontiera l'LSM-tree continua ad occupare la stessa quantità di memoria centrale e non ha decrementi di precisione, però il crivello rallenta e occupa più memoria di massa.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QSi noti che al crescere della frontiera l'LSM-tree continua a occupare la stessa quantità di memoria centrale e non ha decrementi di precisione, però il crivello rallenta e occupa più memoria di massa.\\E$"}
{"rule":"ARTICOLATA_SOSTANTIVO","sentence":"^\\QUn modo meno responsive ma molto più semplice di implementare il crivello che effettua una visita in ampiezza e richiede memoria centrale costante senza utilizzare strutture dati, consiste nel tenere traccia, in ogni istante, di tre file: Un file Z di URL già visitati (V F), in ordine lessicografico.\\E$"}
{"rule":"ST_03_001","sentence":"^\\QVa notato che l'ordinamento effettuato su A altera l'ordine di accodamento.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QDeduplico S, quindi elimino le occorrenze successive alla prima per ogni firma.\\E$"}
{"rule":"ST_01_005","sentence":"^\\QScandiamo ogni entry di S e A in parallelo (sono entrambi ordinati) e diamo in output gli URL in A corrispondenti alle entry marcatre come utili al passo precedente.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QTecniche di programmazione concorrente lock-free.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QAlgoritmo lock-free per aggiungere un nodo (n) a una lista (dopo p) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q !CAS(&p.next, t, n) L'algoritmo per la cancellazione é piú complesso: l'idea di utilizzare la stessa tecnica non funziona perché é possibile cancellare un nodo mentre sta venendo inserito un successore, cancellando cosí l'effetto dell'inserimento.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QUna relazione tra gli insiemi X_1, X_2, …, X_n é un sottoinsieme R del prodotto cartesiano X n. Se \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q si tende a scrivere \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q per \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QSe R é una relazione binaria tra X e Y, X é detto dominio di R, ed é denotato da dom(R), mentre Y é detto codominio di R, ed é denotato da cod(R).\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QIl rango o insieme di definizione di R é l'insieme ran(R) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, e in generale puó non coincidere con il dominio di R. L'immagine di R é l'insieme imm(R) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, e in generale puó non coincidere con il codominio di R. Una relazione binaria R tra X e Y é monodroma se per ogni \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q X esiste al piú un \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Y tale che \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QÉ totale se per ogni \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q X esiste un \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Y tale che \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q , cioé se ran(R) = dom(R).\\E$"}
{"rule":"ITALIAN_WORD_REPEAT_RULE","sentence":"^\\QDato un sottoinsieme A di X, possiamo associargli la sua funzione caratteristica _A X 2 definita da: \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Per contro, a ogni funzione f X 2 possiamo associare il sottoinsieme di X dato dagli elementi mappati da \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, cioé l'insieme x X f(x) = 1; tale corrispondenza é inversa alla precedente, ed é quindi naturalmente equivalente considerare sottoinsiemi di X o funzioni di X in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QDate due funzioni \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, g  , diremo che \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q é di ordine non superiore a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, e scriveremo che \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q g (\"\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q é \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q-grande di \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\") se esiste una costante \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q tale che \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q definitivamente.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QL'indegree ha una serie di problematiche evidenti (e.g. è facile da aggirare), ma è un buon punto di partenza, e in alcuni casi ha raggiunto risultati migliori di tecniche più sofisticate (si veda, ad esempio ).\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\QBavelas ha introdotto il concetto di closeness alla fine degli anni quaranta in ; la closeness di \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q è definita come segue \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q L'intuizione che sta dietro al concetto di closeness è che nodi più centrali dovranno avere distanze più piccole da tutti gli altri nodi, avendo pertanto un denominatore più piccolo e quindi una centralità più grande.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QPrendiamo quindi ispirazione da Marchiori e Latora : presentatogli il problema di offrire una nozione sensata di \"lunghezza media del percorso più breve\" per un grafo direzionato generico, hanno proposto di rimpiazzare la media delle distanze con la media armonica di tutte le distanze.\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\QPrendiamo quindi ispirazione da Marchiori e Latora : presentatogli il problema di offrire una nozione sensata di \"lunghezza media del percorso più breve\" per un grafo direzionato generico, hanno proposto di rimpiazzare la media delle distanze con la media armonica di tutte le distanze.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QLa betweenness è stata introdotta da Anthonisse per gli archi, ed è stata poi ripresa da Freeman per i nodi .\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QIn base all'autovalore dominante della componente fortemente connessa, l'autovettore dominante potrebbe o potrebbe non essere diverso da zero per componenti terminali (un discorso più completo può essere trovato in ).\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QUn esempio recente di applicazione di centralità basata su autovettori dominanti può essere trovato in .\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QUn altro passo fondamentale verso il ranking spettrale fu fatto mezzo secolo dopo da John R. Seeley , il quale non era al corrente del lavoro fatto da Landau: notò che gli indici basati su somme di righe o colonne non avevano chissà quale significato a causa del fatto che non prendevano in considerazione l'importante fatto che bisogna piacere a chi piace a molti, e così via.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QUn altro passo fondamentale verso il ranking spettrale fu fatto mezzo secolo dopo da John R. Seeley , il quale non era al corrente del lavoro fatto da Landau: notò che gli indici basati su somme di righe o colonne non avevano chissà quale significato a causa del fatto che non prendevano in considerazione l'importante fatto che bisogna piacere a chi piace a molti, e così via.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QDunque 1 è autovalore di \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, e il suo / i suoi autvettore(i) sinistro(i) fornisce(ono) soluzioni per l'equazione.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QKatz notò immediatamente che l'indice poteva essere espresso usando operatori classici dell'algebra lineare: \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q una semplice generalizzazione (consigliata da Hubbell in ) rimpiazza il vettore 1 con un vettore di preferenze v affinchè i cammini vengano pesati in maniera differente sulla base del nodo di partenza.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QPageRank é una delle centralitá spettarli oggi in uso piú discusse, essenzialmente sembrerebbe essere usata all'interno dell'algoritmo di ranking di Google.\\E$"}
{"rule":"ST_03_001","sentence":"^\\QIl lettore dovrebbe essere a conoscenza, ad ogni modo, del fatto che la letteratura riguardante l'efficacia di PageRank nel campo dell'information retrieval é alquanto povera, ed é composta essenzialmente di risultati negativi quali e\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QPer definizione PageRank é l'unico vettore p soddisfacente \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Dove \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q é ancora la matrice di adiacenza del grafo \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q-normalizzata, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q é un damping factor, come quello visto per l'indice di Katz, v é un vettore di preferenza (che deve essere una distribuzione).\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\QQuesta definizione appare nel paper di Brin e Page su Google ; gli autori affermano che il punteggio ricavato con PageRank é una distribuzione di probabilitá sulle pagine del web, ció significa che ha norma \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q unitaria, ma non é necessariamente vero se \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q ha righe nulle.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QQuesta definizione appare nel paper di Brin e Page su Google ; gli autori affermano che il punteggio ricavato con PageRank é una distribuzione di probabilitá sulle pagine del web, ció significa che ha norma \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q unitaria, ma non é necessariamente vero se \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q ha righe nulle.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QÉ interessante notare, a ogni modo, che nel preprint scritto in collaborazione con Motwani e Winograd e comunemente citato come definizione di PageRank .\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QBrin e Page stessi proposero una ricorrenza lineare diversa ma essenzialmente equivalente a quella dell'indice di Hubbell , e dichiararono che \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q poteva avere righe nulle, nel qual caso l'autovalore dominante di \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q sarebbe potuto essere piú piccolo di 1, dunque un processo di normalizzazione sarebbe stato necessario per ottenere norma \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q pari a 1.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QSe \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q non ha righe nulle, o \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q é stata patchata di modo da essere stocastica, PageRank puó essere definito in modo equivalente alla distribuzione stazionaria (i.e.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Ql'autovettore dominante) della catena di Markov con matrice di transizione \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q che é analoga all'equazione (11).\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QDel Corso, Gullí e Romani hanno mostrato che i punteggi risultanti (che hanno sempre norma \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q unitaria) differiscono dal vettore PageRank definito in (12) solo per un fattore di normalizzazione, a patto che le righe nulle della matrice di transizione della catena di Markov siano state rimpiazzate con v. Se \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q non avesse righe null, i punteggi sono, ovviamente, identici in quanto l'equazione (13) puó essere facilmente derivata dalla matrice di transizione di cui sopra.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QEntrambe le definizioni sono state utilizzate in letteratura: la ricorrenza lineare mostrata in (12) é particolarmente utile qualora vi sia bisogno di dipendenza lineare da v come in .\\E$"}
{"rule":"ST_03_001","sentence":"^\\QSi possono fare le seguenti osservazioni: L'intervallo associato a una parola di lunghezza \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q ha lunghezza \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q se \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q l'intervallo associato a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q contiene quello associato a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Due parole sono inconfrontabili se solo i corrispondenti intervalli sono disgiunti; infatti, se \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q e \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q sono inconfrontabili e \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q é il loro massimo prefisso comune, assumendo senza perdita di generalitá che \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q e \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q l'intervallo di \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q sará contenuto in quello di \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q e l'intervallo di \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q in quello di \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q: dato che gli intervalli di \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q e \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q sono disgiunti per definizione, lo sono anche quelli di \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q e \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Dato un qualunque intervallo diadico \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q esiste un'unica parola di lunghezza \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q a cui é associato l'intervallo, vale a dire, la parola formata dalla rappresentazione binaria di \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q allineata ad \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q bit; questo é certamente vero per \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, e data una parola \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q con \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q se l'intervallo associato a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q privato dell'ultimo carattere é \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q l'intervallo associato a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q é \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; se l'ultimo carattere di \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q é 0, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Fatte le dovute premesse possiamo passare alla dimostrazione del Teorema 1.\\E$"}
{"rule":"ARTICOLATA_SOSTANTIVO","sentence":"^\\QL'idea é che ogni parola é formata da un numero variabile di blocchi di \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q bit (4 nel caso dei nibble e 8 nel caso dei byte).\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QCió significa che se \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q é la lunghezza della parola di codice per \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q e \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q é l'entropia di una distribuzione \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (nel senso di Shannon), esistono \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q costanti tali che: \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Un codice é detto asintoticamente ottimo quando a destra il limite superiore é della forma \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q con \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QUn approccio che ha rivoluzionato il modo di memorizzare le liste è quello proposto in , comunemente chiamato PFOR-DELTA o FOR.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qil protocollo di rete con cui ci si connette all0indice dovrà essere in grado di trasmetterli.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QUna funzione si dice controvariante quando, dato un insieme \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q e \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Questo significa che se B é un insieme di agenti piú grande (al piú uguale) di A, l'insieme di URL associato a ciascuno degli agenti in B sará piú piccolo (al piú uguale) dell'insieme di URL associato al corrispettivo agente in A.\\E$"}
{"rule":"ST_03_001","sentence":"^\\QInoltre, tutte le modifiche ad A avvengono in tempo costante (dato che non c'é nulla da fare).\\E$"}
{"rule":"ST_03_001","sentence":"^\\QIl secondo approccio non richiede che ci sia un universo predeterminato o ordinato.\\E$"}
{"rule":"ST_03_001","sentence":"^\\QSi noti che questo metodo richiede tempo di calcolo proporzionale a A, e spazio costante (basta tenere traccia del minimo elemento trovato).\\E$"}
{"rule":"ST_03_001","sentence":"^\\QAnche in questo caso, le modifiche a A richiedono tempo costante, dato che non c'é nulla da fare.\\E$"}
{"rule":"ST_03_001","sentence":"^\\QL'effetto di aggiungere un nuovo agente é semplicemente quello di spezzare tramite le nuove repliche i segmenti preesistenti: la prima parte verrá mappata sul nuovo agente, la seconda continuerá ad essere mappata sull'agente precedente.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QLa parte delicata é, in questo caso, il bilanciamento: se \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q viene scelto sufficientemente grande (rispetto al numero di agenti possibili; si veda ) i segmenti risultano cosí piccoli da poter dimostrare che la funzione é bilanciata con alta probabilitá.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QUna struttura dati é quasi-succinta quando lo spazio occupato dalla struttura si avvicina molto al lower bound teorico.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QPer quel che riguarda i puntatori documentali utilizziamo, ovviamente, una lista quasi-succinta implementando una tabella di salto che ci consente di rendere le letture ancora piú veloci.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QPer quel che riguarda i puntatori documentali utilizziamo, ovviamente, una lista quasi-succinta implementando una tabella di salto che ci consente di rendere le letture ancora piú veloci facendo un piccolo sacrificio in termini di spazio.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QPer quel che riguarda le posizioni e i conteggi basta tenere a mente che possiamo tenere in memoria una lista quasi-succinta memorizzando \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q per successioni strettamente monotone.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QElias Fano é una tecnica di codifica per indici veloce e compatta, che puó essere battuta per compressione solo da codifiche piú lente come il Golomb, per contro é scalabile e ha un accesso locale molto migliore di altri approcci, rendendolo una tecnica che si puó quasi definire un go-to.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QUn approccio che ha rivoluzionato il modo di memorizzare le liste di affissione, è quello proposto in , comunemente chiamato PFOR-DELTA o FOR.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qil protocollo di rete con cui ci si connette all'indice dovrà essere in grado di trasmetterli.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QIl primo e piú classico metodo é TF/IDF (term frequency / inverse term frequency) .\\E$"}
